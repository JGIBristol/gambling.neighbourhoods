[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 gambling.neighbourhoods authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"/articles/DBSCAN_eps500.html","id":"load-data","dir":"Articles","previous_headings":"Gambling neighbourhoods using DBSCAN and eps=500m","what":"Load data","title":"DBSCAN_eps500","text":"Load geographical data (spatial points dataframe) containing coordinates gambling premises.","code":"library(devtools) load_all() xy <- readRDS(\"data/xy.rds\")"},{"path":"/articles/DBSCAN_eps500.html","id":"minpts4-with-eps500m","dir":"Articles","previous_headings":"Gambling neighbourhoods using DBSCAN and eps=500m","what":"MinPts=4 with eps=500m","title":"DBSCAN_eps500","text":"Load dataframe coordinates cluster assignments Number clusters (excluding noise): Number noise points: Leaflet map MinPts=4, eps=500m","code":"res4_dbscan_eps500 <- readRDS(\"results/dbscan_results_eps500_MinPts4.rds\") # Create a data frame from the spatial points df4_dbscan_eps500 <- create_df(res4_dbscan_eps500,xy) head(df4_dbscan_eps500) dim(df4_dbscan_eps500) k4_dbscan_eps500 <- length(unique(df4_dbscan_eps500$cluster)) - 1 k4_dbscan_eps500 df4_dbscan_eps500_null <- create_df_null(df4_dbscan_eps500) n_noise_dbscan_eps500_4 <- nrow(df4_dbscan_eps500_null) n_noise_dbscan_eps500_4 # Get the convex hulls for each cluster cluster_hulls4 <- get_cluster_hulls(df4_dbscan_eps500) # Create the leaflet map map4 <-leaflet_map(cluster_hulls4, df4_dbscan_eps500, df4_dbscan_eps500_null) # saveWidget(map4, file=\"results/map_MinPt4.html\") map4"},{"path":"/articles/DBSCAN_eps500.html","id":"minpts5-with-eps500m","dir":"Articles","previous_headings":"Gambling neighbourhoods using DBSCAN and eps=500m","what":"MinPts=5 with eps=500m","title":"DBSCAN_eps500","text":"Load dataframe coordinates cluster assignments Number clusters (excluding noise): Number noise points: Leaflet map MinPts=5, eps=500m","code":"res5_dbscan_eps500 <- readRDS(\"results/dbscan_results_eps500_MinPts5.rds\") # Create a data frame from the spatial points df5_dbscan_eps500 <- create_df(res5_dbscan_eps500,xy) head(df5_dbscan_eps500) dim(df5_dbscan_eps500) k5_dbscan_eps500 <- length(unique(df5_dbscan_eps500$cluster)) - 1 k5_dbscan_eps500 df5_dbscan_eps500_null <- create_df_null(df5_dbscan_eps500) n_noise_dbscan_eps500_5 <- nrow(df5_dbscan_eps500_null) n_noise_dbscan_eps500_5 # Get the convex hulls for each cluster  cluster_hulls_dbscan_5 <- get_cluster_hulls(df5_dbscan_eps500) # Create the leaflet map map_dbscan_k5_eps500 <-leaflet_map(cluster_hulls_dbscan_5, df5_dbscan_eps500, df5_dbscan_eps500_null) # saveWidget(map_dbscan_k5_eps500, file=\"results/map_DBSCAN_MinPt5_eps500.html\") map_dbscan_k5_eps500"},{"path":"/articles/DBSCAN_eps500.html","id":"minpts10-with-eps500m","dir":"Articles","previous_headings":"Gambling neighbourhoods using DBSCAN and eps=500m","what":"MinPts=10 with eps=500m","title":"DBSCAN_eps500","text":"Load dataframe coordinates cluster assignments Number clusters (excluding noise): Number noise points: Leaflet map MinPts=10, eps=500m","code":"res10_dbscan_eps500 <- readRDS(\"results/dbscan_results_eps500_MinPts10.rds\") # Create a data frame from the spatial points df10_dbscan_eps500 <- create_df(res10_dbscan_eps500,xy) head(df10_dbscan_eps500) dim(df10_dbscan_eps500) k10_dbscan_eps500 <- length(unique(df10_dbscan_eps500$cluster)) - 1 k10_dbscan_eps500 df10_dbscan_eps500_null <- create_df_null(df10_dbscan_eps500) n_noise_dbscan_eps500_10 <- nrow(df10_dbscan_eps500_null) n_noise_dbscan_eps500_10 # Get the convex hulls for each cluster  cluster_hulls_dbscan_10 <- get_cluster_hulls(df10_dbscan_eps500) # Create the leaflet map map_dbscan_k10_eps500 <-leaflet_map(cluster_hulls_dbscan_10, df10_dbscan_eps500, df10_dbscan_eps500_null) # saveWidget(map_dbscan_k10_eps500, file=\"results/map_DBSCAN_MinPt10_eps500.html\") map_dbscan_k10_eps500"},{"path":"/articles/HDBSCAN_eps500.html","id":"gambling-neighbourhoods-using-an-hybrid-approach-with-hdbscan-and-eps500m","dir":"Articles","previous_headings":"","what":"Gambling neighbourhoods using an hybrid approach with HDBSCAN and eps=500m","title":"HDBSCAN_eps500","text":"vignette demonstrates create interactive maps using leaflet package R visualize gambling neighbourhoods identified using hybrid approach combining HDBSCAN clustering fixed eps=500m. load geographical data containing coordinates gambling premises clustering results HDBSCAN eps=500m different values MinPts (4,5,10,15,20). create separate map value MinPts, showing cluster centers number gambling premises cluster. Clusters blue represented polygons, popup displaying cluster ID number gambling premises within cluster. polygon sized according number gambling premises contains. Gambling premises inside cluster shown also blue, unclustered (noise) points shown black. point (gambling premise GP) popup displaying ID.","code":""},{"path":"/articles/HDBSCAN_eps500.html","id":"load-data","dir":"Articles","previous_headings":"Gambling neighbourhoods using an hybrid approach with HDBSCAN and eps=500m","what":"Load data","title":"HDBSCAN_eps500","text":"Load geographical data (spatial points dataframe) containing coordinates gambling premises.","code":"xy <- readRDS(\"data/xy.rds\")"},{"path":"/articles/HDBSCAN_eps500.html","id":"minpts4-with-eps500m","dir":"Articles","previous_headings":"Gambling neighbourhoods using an hybrid approach with HDBSCAN and eps=500m","what":"MinPts=4 with eps=500m","title":"HDBSCAN_eps500","text":"Load dataframe coordinates cluster assignments Number clusters (excluding noise): Number noise points: Leaflet map MinPts=4, eps=500m","code":"#> # A tibble: 6 × 5 #>    LONG   LAT cluster    ID   Pop #>   <dbl> <dbl> <fct>   <int> <dbl> #> 1 -2.10  57.1 0        7246     0 #> 2 -2.10  57.1 131      7929     4 #> 3 -2.10  57.1 131      4660     4 #> 4 -2.11  57.1 130      6787     9 #> 5 -2.11  57.1 130      5866     9 #> 6 -2.11  57.1 130      4658     9 #> [1] 8761    5 #> [1] 131 #> [1] 260"},{"path":"/articles/HDBSCAN_eps500.html","id":"minpts5-with-eps500m","dir":"Articles","previous_headings":"Gambling neighbourhoods using an hybrid approach with HDBSCAN and eps=500m","what":"MinPts=5 with eps=500m","title":"HDBSCAN_eps500","text":"Load dataframe coordinates cluster assignments Number clusters (excluding noise): Number noise points: Leaflet map MinPts=5, eps=500m","code":"#> # A tibble: 6 × 5 #>    LONG   LAT cluster    ID   Pop #>   <dbl> <dbl> <fct>   <int> <dbl> #> 1 -2.10  57.1 512      7246    56 #> 2 -2.10  57.1 512      7929    56 #> 3 -2.10  57.1 512      4660    56 #> 4 -2.11  57.1 512      6787    56 #> 5 -2.11  57.1 512      5866    56 #> 6 -2.11  57.1 512      4658    56 #> [1] 8761    5 #> [1] 512 #> [1] 1808"},{"path":"/articles/HDBSCAN_eps500.html","id":"minpts10-with-eps500m","dir":"Articles","previous_headings":"Gambling neighbourhoods using an hybrid approach with HDBSCAN and eps=500m","what":"MinPts=10 with eps=500m","title":"HDBSCAN_eps500","text":"Load dataframe coordinates cluster assignments Number clusters (excluding noise): Number noise points: Leaflet map MinPts=10, eps=500m","code":"#> # A tibble: 6 × 5 #>    LONG   LAT cluster    ID   Pop #>   <dbl> <dbl> <fct>   <int> <dbl> #> 1 -2.10  57.1 245      7246    56 #> 2 -2.10  57.1 245      7929    56 #> 3 -2.10  57.1 245      4660    56 #> 4 -2.11  57.1 245      6787    56 #> 5 -2.11  57.1 245      5866    56 #> 6 -2.11  57.1 245      4658    56 #> [1] 8761    5 #> [1] 245 #> [1] 3119"},{"path":"/articles/HDBSCAN_eps500.html","id":"minpts15-with-eps500m","dir":"Articles","previous_headings":"Gambling neighbourhoods using an hybrid approach with HDBSCAN and eps=500m","what":"MinPts=15 with eps=500m","title":"HDBSCAN_eps500","text":"Load dataframe coordinates cluster assignments Number clusters (excluding noise): Number noise points: Leaflet map MinPts=15, eps=500m","code":"#> # A tibble: 6 × 5 #>    LONG   LAT cluster    ID   Pop #>   <dbl> <dbl> <fct>   <int> <dbl> #> 1 -2.10  57.1 143      7246    56 #> 2 -2.10  57.1 143      7929    56 #> 3 -2.10  57.1 143      4660    56 #> 4 -2.11  57.1 143      6787    56 #> 5 -2.11  57.1 143      5866    56 #> 6 -2.11  57.1 143      4658    56 #> [1] 8761    5 #> [1] 143 #> [1] 3236"},{"path":"/articles/HDBSCAN_eps500.html","id":"minpts20-with-eps500m","dir":"Articles","previous_headings":"Gambling neighbourhoods using an hybrid approach with HDBSCAN and eps=500m","what":"MinPts=20 with eps=500m","title":"HDBSCAN_eps500","text":"Load dataframe coordinates cluster assignments Number clusters (excluding noise): Number noise points: Leaflet map MinPts=20, eps=500m","code":"#> # A tibble: 6 × 5 #>    LONG   LAT cluster    ID   Pop #>   <dbl> <dbl> <fct>   <int> <dbl> #> 1 -2.10  57.1 83       7246    56 #> 2 -2.10  57.1 83       7929    56 #> 3 -2.10  57.1 83       4660    56 #> 4 -2.11  57.1 83       6787    56 #> 5 -2.11  57.1 83       5866    56 #> 6 -2.11  57.1 83       4658    56 #> [1] 8761    5 #> [1] 83 #> [1] 2646"},{"path":[]},{"path":"/articles/Leaflet-maps.html","id":"gambling-neighbourhoods-using-hdbscan","dir":"Articles","previous_headings":"","what":"Gambling neighbourhoods using HDBSCAN","title":"Leaflet-maps","text":"vignette demonstrates create interactive maps using leaflet package R visualize gambling neighbourhoods. load geographical data containing coordinates gambling premises clustering results HDBSCAN different values MinPts (2,3,4,5,10). create separate map value MinPts, showing cluster centers number gambling premises cluster. Clusters blue represented polygons, popup displaying cluster ID number gambling premises within cluster. polygon sized according number gambling premises contains. Gambling premises inside cluster shown also blue, unclustered (noise) points shown black. point (gambling premise GP) popup displaying ID.","code":""},{"path":"/articles/Leaflet-maps.html","id":"load-data","dir":"Articles","previous_headings":"Gambling neighbourhoods using HDBSCAN","what":"Load data","title":"Leaflet-maps","text":"Load geographical data (spatial points dataframe) containing coordinates gambling premises.","code":"xy <- readRDS(\"data/xy.rds\")"},{"path":"/articles/Leaflet-maps.html","id":"minpts2","dir":"Articles","previous_headings":"Gambling neighbourhoods using HDBSCAN","what":"MinPts=2","title":"Leaflet-maps","text":"Load dataframe coordinates cluster assignments Number clusters (excluding noise): Number noise points: Leaflet map MinPts=2","code":"res2 <- readRDS(\"results/hdbscan_results_2.rds\") # Create a data frame from the spatial points df2 <- create_df(res2,xy) head(df2) #> # A tibble: 6 × 5 #>    LONG   LAT cluster    ID   Pop #>   <dbl> <dbl> <fct>   <int> <dbl> #> 1 -2.10  57.1 13       7246    24 #> 2 -2.10  57.1 13       7929    24 #> 3 -2.10  57.1 13       4660    24 #> 4 -2.11  57.1 13       6787    24 #> 5 -2.11  57.1 13       5866    24 #> 6 -2.11  57.1 13       4658    24 dim(df2) #> [1] 8761    5 k2 <- length(unique(df2$cluster)) - 1 k2 #> [1] 13 df2_null <- create_df_null(df2) n_noise_k2 <- nrow(df2_null) n_noise_k2 #> [1] 11 # Get the convex hulls for each cluster cluster_hulls2 <- get_cluster_hulls(df2) # Create the leaflet map map2 <-leaflet_map(cluster_hulls2, df2, df2_null) # saveWidget(map2, file=\"results/map_MinPt2.html\") map2"},{"path":"/articles/Leaflet-maps.html","id":"minpts3","dir":"Articles","previous_headings":"Gambling neighbourhoods using HDBSCAN","what":"MinPts=3","title":"Leaflet-maps","text":"Load dataframe coordinates cluster assignments Number clusters (excluding noise): Number noise points: Leaflet map MinPts=3","code":"res3 <- readRDS(\"results/hdbscan_results_3.rds\") # Create a data frame from the spatial points df3 <- create_df(res3,xy) head(df3) #> # A tibble: 6 × 5 #>    LONG   LAT cluster    ID   Pop #>   <dbl> <dbl> <fct>   <int> <dbl> #> 1 -2.10  57.1 117      7246    56 #> 2 -2.10  57.1 117      7929    56 #> 3 -2.10  57.1 117      4660    56 #> 4 -2.11  57.1 117      6787    56 #> 5 -2.11  57.1 117      5866    56 #> 6 -2.11  57.1 117      4658    56 dim(df3) #> [1] 8761    5 #> [1] 117 #> [1] 125"},{"path":"/articles/Leaflet-maps.html","id":"minpts4","dir":"Articles","previous_headings":"Gambling neighbourhoods using HDBSCAN","what":"MinPts=4","title":"Leaflet-maps","text":"Load dataframe coordinates cluster assignments Number clusters (excluding noise): Number noise points: Leaflet map MinPts=4","code":"res4 <- readRDS(\"results/hdbscan_results_4.rds\") # Create a data frame from the spatial points df4 <- create_df(res4,xy)    head(df4) #> # A tibble: 6 × 5 #>    LONG   LAT cluster    ID   Pop #>   <dbl> <dbl> <fct>   <int> <dbl> #> 1 -2.10  57.1 0        7246     0 #> 2 -2.10  57.1 131      7929     4 #> 3 -2.10  57.1 131      4660     4 #> 4 -2.11  57.1 130      6787     9 #> 5 -2.11  57.1 130      5866     9 #> 6 -2.11  57.1 130      4658     9 dim(df4) #> [1] 8761    5 #> [1] 131 #> [1] 260"},{"path":"/articles/Leaflet-maps.html","id":"minpts5","dir":"Articles","previous_headings":"Gambling neighbourhoods using HDBSCAN","what":"MinPts=5","title":"Leaflet-maps","text":"Load dataframe coordinates cluster assignments Number clusters (excluding noise): Number noise points: Leaflet map MinPts=5","code":"res5 <- readRDS(\"results/hdbscan_results_5.rds\") # Create a data frame from the spatial points df5 <- create_df(res5,xy)    head(df5)    #> # A tibble: 6 × 5 #>    LONG   LAT cluster    ID   Pop #>   <dbl> <dbl> <fct>   <int> <dbl> #> 1 -2.10  57.1 512      7246    56 #> 2 -2.10  57.1 512      7929    56 #> 3 -2.10  57.1 512      4660    56 #> 4 -2.11  57.1 512      6787    56 #> 5 -2.11  57.1 512      5866    56 #> 6 -2.11  57.1 512      4658    56 dim(df5) #> [1] 8761    5 #> [1] 512 #> [1] 1808"},{"path":"/articles/Leaflet-maps.html","id":"minpts10","dir":"Articles","previous_headings":"Gambling neighbourhoods using HDBSCAN","what":"MinPts=10","title":"Leaflet-maps","text":"Load dataframe coordinates cluster assignments Number clusters (excluding noise): Number noise points: Leaflet map MinPts=10","code":"res10 <- readRDS(\"results/hdbscan_results_10.rds\") # Create a data frame from the spatial points df10 <- create_df(res10,xy)    head(df10)    #> # A tibble: 6 × 5 #>    LONG   LAT cluster    ID   Pop #>   <dbl> <dbl> <fct>   <int> <dbl> #> 1 -2.10  57.1 245      7246    56 #> 2 -2.10  57.1 245      7929    56 #> 3 -2.10  57.1 245      4660    56 #> 4 -2.11  57.1 245      6787    56 #> 5 -2.11  57.1 245      5866    56 #> 6 -2.11  57.1 245      4658    56 dim(df10) #> [1] 8761    5 #> [1] 245 #> [1] 3119"},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rita Rasteiro. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rasteiro R (2025). gambling.neighbourhoods: Package (One Line, Title Case). R package version 0.0.0.9000, https://github.com/JGIBristol/gambling.neighbourhoods.","code":"@Manual{,   title = {gambling.neighbourhoods: What the Package Does (One Line, Title Case)},   author = {Rita Rasteiro},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/JGIBristol/gambling.neighbourhoods}, }"},{"path":"/index.html","id":"gamblingneighbourhoods","dir":"","previous_headings":"","what":"What the Package Does (One Line, Title Case)","title":"What the Package Does (One Line, Title Case)","text":"Gambling neighbourhoods project aims produce typology gambling neighbourhoods across UK. aims identify clusters gambling premises urban environments, using clustering algorithms DBSCAN, visualize results using interactive maps ultimately create Shiny dashboard plot typologies. Previous research indicated pervasiveness gambling outlets became staple UK high streets. can found almost type high street: high streets expensive, affluent areas close proximity luxurious retail shops, high streets deprived town centres hardly retail opportunities. creating typology gambling neighbourhoods project expose location strategies gambling industry functions concentrations gambling shops perform. outputs project also support Local Authorities, need develop policy frameworks managing gambling shop licence applications well mitigation strategies harmful gambling behaviours.","code":""},{"path":"/index.html","id":"r-package-gamblingneighbourhoods","dir":"","previous_headings":"","what":"R package (gambling.neighbourhoods)","title":"What the Package Does (One Line, Title Case)","text":"R package gambling.neighbourhoods early stages development provide functions analyzing visualizing gambling premises urban environments. package start including functions cleaning data, generating distance matrices, performing clustering, visualization, adding functionality information included. can install development version package GitHub : information package can found gambling.neighbourhoods documentation.","code":"if (!requireNamespace(\"devtools\", quietly = TRUE)){   install.packages(\"devtools\") } devtools::install_github(\"JGIBristol/gambling.neighbourhoods\")"},{"path":"/index.html","id":"proof-of-concept-poc","dir":"","previous_headings":"","what":"Proof of Concept (PoC)","title":"What the Package Does (One Line, Title Case)","text":"proof concept available poc directory, demonstrating use clustering algorithms identify clusters gambling premises.","code":""},{"path":"/reference/clean_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean and merge gambling premises data with geographical data — clean_data","title":"Clean and merge gambling premises data with geographical data — clean_data","text":"Clean merge gambling premises data geographical data","code":""},{"path":"/reference/clean_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean and merge gambling premises data with geographical data — clean_data","text":"","code":"clean_data(gc_data, geo_data)"},{"path":"/reference/clean_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean and merge gambling premises data with geographical data — clean_data","text":"gc_data Data frame containing gambling premises data geo_data Data frame containing geographical data","code":""},{"path":"/reference/clean_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean and merge gambling premises data with geographical data — clean_data","text":"merged data frame cleaned relevant columns)","code":""},{"path":"/reference/create_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data frame from clustering results and spatial data — create_df","title":"Create a data frame from clustering results and spatial data — create_df","text":"Create data frame clustering results spatial data","code":""},{"path":"/reference/create_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data frame from clustering results and spatial data — create_df","text":"","code":"create_df(res, xy)"},{"path":"/reference/create_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a data frame from clustering results and spatial data — create_df","text":"res Clustering results xy Spatial data (points)","code":""},{"path":"/reference/create_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a data frame from clustering results and spatial data — create_df","text":"data frame coordinates cluster information","code":""},{"path":"/reference/create_df_null.html","id":null,"dir":"Reference","previous_headings":"","what":"create a data frame containing the unnclustered points — create_df_null","title":"create a data frame containing the unnclustered points — create_df_null","text":"create data frame containing unnclustered points","code":""},{"path":"/reference/create_df_null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create a data frame containing the unnclustered points — create_df_null","text":"","code":"create_df_null(df)"},{"path":"/reference/create_df_null.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create a data frame containing the unnclustered points — create_df_null","text":"df Data frame containing clustered points columns LONG, LAT, cluster, ID","code":""},{"path":"/reference/create_df_null.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create a data frame containing the unnclustered points — create_df_null","text":"data frame unclustered points (cluster == 0)","code":""},{"path":"/reference/get_cluster_hulls.html","id":null,"dir":"Reference","previous_headings":"","what":"Get convex hulls for each cluster — get_cluster_hulls","title":"Get convex hulls for each cluster — get_cluster_hulls","text":"Get convex hulls cluster","code":""},{"path":"/reference/get_cluster_hulls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get convex hulls for each cluster — get_cluster_hulls","text":"","code":"get_cluster_hulls(df)"},{"path":"/reference/get_cluster_hulls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get convex hulls for each cluster — get_cluster_hulls","text":"df Data frame containing clustered points columns LONG, LAT, cluster","code":""},{"path":"/reference/get_cluster_hulls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get convex hulls for each cluster — get_cluster_hulls","text":"list data frames, containing convex hull cluster","code":""},{"path":"/reference/leaflet_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Leaflet map with cluster hulls and points — leaflet_map","title":"Create a Leaflet map with cluster hulls and points — leaflet_map","text":"Create Leaflet map cluster hulls points","code":""},{"path":"/reference/leaflet_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Leaflet map with cluster hulls and points — leaflet_map","text":"","code":"leaflet_map(cluster_hulls, df, df_null)"},{"path":"/reference/leaflet_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Leaflet map with cluster hulls and points — leaflet_map","text":"cluster_hulls list data frames, containing convex hull cluster df Data frame containing clustered points columns LONG, LAT, cluster df_null Data frame containing unclustered points columns LONG, LAT, ID","code":""},{"path":"/reference/leaflet_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Leaflet map with cluster hulls and points — leaflet_map","text":"leaflet map object","code":""},{"path":[]},{"path":"/news/index.html","id":"version-development-version","dir":"Changelog","previous_headings":"","what":"version 0.0.0.900","title":"gambling.neighbourhoods (development version)","text":"added NEWS.md track changes package","code":""}]
